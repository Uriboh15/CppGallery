<!-- Copyright (c) Microsoft Corporation and Contributors. -->
<!-- Licensed under the MIT License. -->

<Page
    x:Class="CppGallery.Pages.Columns.Column15.Column15Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CppGallery.Pages.UserControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../UserControls/ColumnsDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <ScrollViewer>
        <local:ColumnOuterPanel>
            <local:ColumnContentPanel>
                <TextBlock Text="C# から C/C++ の関数を呼ぶ" Style="{StaticResource ColumnTitle}" />
                <TextBlock>
                    プログラミングを続けていれば別の言語から C++ の関数を呼ぶ必要が出てくることもあるだろう。
                    そこで今回は dll を使って C# から C/C++ の関数を呼ぶ方法を書いてみる。
                </TextBlock>
            </local:ColumnContentPanel>

            <local:ColumnContentPanel>
                <TextBlock Text="C++ 側の準備  (Visual Studio の場合)" Style="{StaticResource ColumnSubTitle}" />
                <TextBlock>
                    スタート画面で「新しいプロジェクトの作成」を選択。
                </TextBlock>
                <Image Source="../../../Pages/Data/Columns/Column15/image1.png" MaxWidth="1014"/>
            </local:ColumnContentPanel>

            <local:ColumnContentPanel>
                <TextBlock>
                    「空のプロジェクト」を選択して次へ。
                </TextBlock>
                <Image Source="../../../Pages/Data/Columns/Column15/image2.png" MaxWidth="1014"/>
            </local:ColumnContentPanel>

            <local:ColumnContentPanel>
                <TextBlock>
                    プロジェクト名をテキトーに決めて作成。
                </TextBlock>
                <Image Source="../../../Pages/Data/Columns/Column15/image3.png" MaxWidth="1014"/>
            </local:ColumnContentPanel>

            <local:ColumnContentPanel>
                <TextBlock>
                    プロジェクトができたら構成を Debug から Release に変える。
                </TextBlock>
                <Image Source="../../../Pages/Data/Columns/Column15/image4.png" MaxWidth="502"/>
            </local:ColumnContentPanel>

            <local:ColumnContentPanel>
                <TextBlock>
                    ツールバーの　プロジェクト(P)　=>　(プロジェクト名)のプロパティ(P)　からプロパティページを開き、種類の構成を「ダイナミック ライブラリ(.dll)」に変更する。
                </TextBlock>
                <Image Source="../../../Pages/Data/Columns/Column15/image5.png" MaxWidth="786"/>
            </local:ColumnContentPanel>

            <local:ColumnContentPanel>
                <TextBlock>
                    ソースファイルとヘッダーファイルのフィルター内にそれぞれ source.cpp  dllfunction.h を追加する。
                </TextBlock>
                <Image Source="../../../Pages/Data/Columns/Column15/image6.png" MaxWidth="941"/>
            </local:ColumnContentPanel>

            <local:ColumnContentPanel>
                <TextBlock Text="C++ 側の準備  (GCC の場合)" Style="{StaticResource ColumnSubTitle}" />
                <TextBlock>
                    任意のフォルダー内ににそれぞれ source.cpp　dllfunction.h を作成する。
                </TextBlock>
            </local:ColumnContentPanel>

            <local:ColumnContentPanel>
                <TextBlock Text="dll export 用の関数を作成" Style="{StaticResource ColumnSubTitle}" />
                <TextBlock>
                    ヘッダーファイル内に C リンゲージを作成し、その中に関数を宣言する。
                    関数の定義を書く時には  __declspec(dllexport) は必要ない。
                </TextBlock>
                <local:CodeButton Path="Pages/Data/Columns/Column15/source1.txt" FileName="dllfunction.h"/>
                <local:CodeButton Path="Pages/Data/Columns/Column15/source2.txt" FileName="source.cpp"/>
            </local:ColumnContentPanel>

            <local:ColumnContentPanel>
                <TextBlock Text="C++ と C# の型対応" Style="{StaticResource ColumnSubTitle}" />
                <TextBlock>
                    以下は C++ と C# 間の型の対応関係。
                </TextBlock>
                <local:ResultsPanel>
                    <local:ColumnBlockPane
                        Left="C++"
                        Right="C#"
                        />
                    <local:ColumnBlockPane
                        Left="bool"
                        Right="bool"
                        />
                    <local:ColumnBlockPane
                        Left="wchar_t"
                        Right="char"
                        />
                    <local:ColumnBlockPane
                        Left="const char*"
                        Right="string (C#  =>  C++), IntPtr (C++  =>  C#)"
                        />
                    <local:ColumnBlockPane
                        Left="const wchar_t*"
                        Right="string (C#  =>  C++), IntPtr (C++  =>  C#)"
                        />
                    <local:ColumnBlockPane
                        Left="float"
                        Right="float"
                        />
                    <local:ColumnBlockPane
                        Left="double"
                        Right="double"
                        />
                    <local:ColumnBlockPane
                        Left="char"
                        Right="sbyte"
                        />
                    <local:ColumnBlockPane
                        Left="short"
                        Right="short"
                        />
                    <local:ColumnBlockPane
                        Left="int"
                        Right="int"
                        />
                    <local:ColumnBlockPane
                        Left="long"
                        Right="int"
                        />
                    <local:ColumnBlockPane
                        Left="long long"
                        Right="long"
                        />
                    <local:ColumnBlockPane
                        Left="unsigned char"
                        Right="byte"
                        />
                    <local:ColumnBlockPane
                        Left="unsigned short"
                        Right="ushort"
                        />
                    <local:ColumnBlockPane
                        Left="unsigned int"
                        Right="uint"
                        />
                    <local:ColumnBlockPane
                        Left="unsigned long"
                        Right="uint"
                        />
                    <local:ColumnBlockPane
                        Left="unsigned long long"
                        Right="ulong"
                        />
                    
                </local:ResultsPanel>
            </local:ColumnContentPanel>

            <local:ColumnContentPanel>
                <TextBlock Text="dll ファイルをビルド" Style="{StaticResource ColumnSubTitle}"/>
                <TextBlock>
                    Visual Studio の場合は Ctrl + B でビルドする。
                    GCC の場合は以下のコマンドを実行。
                </TextBlock>
                <local:PowerShellCommandButton Path="Pages/Data/Columns/Column15/source3.txt"/>
            </local:ColumnContentPanel>

            <local:ColumnContentPanel>
                <TextBlock Text="C# から C/C++ の関数を読み込む" Style="{StaticResource ColumnSubTitle}"/>
                <TextBlock>
                    生成された dll ファイルを C# の実行ファイルがあるフォルダにコピーする。
                    コピー出来たら何かしらの C# プロジェクトを開く(この場合はコンソール アプリ)。
                    C# からは DllImport を使って C/C++ の関数を取得できる。
                    関数を定義出来たらあとは普通の C# のメソッドと同じように使うことができる。
                </TextBlock>
                <local:CsCodeButton Path="Pages/Data/Columns/Column15/source4.txt" FileName="UseCppDll.cs"/>
            </local:ColumnContentPanel>
            <local:ResultsPanel>
                <TextBlock Style="{StaticResource Result}"/>
                <local:ControlGrid Message="サンプルアプリを起動して動作確認">
                    <Button x:Name="LaunchButton" Content="起動" Width="65" Click="LaunchButton_Click" />
                </local:ControlGrid>
            </local:ResultsPanel>
            <TextBlock HorizontalAlignment="Right">
                    2023年5月13日<LineBreak/>
                    うりぼう
            </TextBlock>
        </local:ColumnOuterPanel>
    </ScrollViewer>
</Page>
